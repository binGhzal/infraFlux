---
# This playbook sets up a K3s HA cluster with multiple masters and worker nodes
# Usage: ansible-playbook -i hosts setup-k3s.yml

- name: Configure all nodes with basic requirements
  hosts: all
  become: true
  gather_facts: true
  vars:
    k3s_version: "v1.31.6+k3s1"
    # Primary master IP for initial cluster setup
    k3s_master_ip: "{{ hostvars[groups['k3s_master'][0]]['ansible_host'] }}"
  tasks:
    - name: Update system packages
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install required packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - net-tools
        state: present

    - name: Disable swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0

    - name: Disable swap permanently
      lineinfile:
        path: /etc/fstab
        regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
        line: '# \1'
        state: present

    - name: Load required kernel modules
      modprobe:
        name: "{{ item }}"
        state: present
      with_items:
        - overlay
        - br_netfilter

    - name: Configure kernel parameters
      sysctl:
        name: "{{ item.key }}"
        value: "{{ item.value }}"
        state: present
        reload: yes
      with_items:
        - { key: 'net.bridge.bridge-nf-call-iptables', value: '1' }
        - { key: 'net.bridge.bridge-nf-call-ip6tables', value: '1' }
        - { key: 'net.ipv4.ip_forward', value: '1' }

- name: Initialize first K3s master node
  hosts: k3s_master[0]
  become: true
  gather_facts: true
  vars:
    k3s_version: "v1.31.6+k3s1"
    k3s_master_ip: "{{ hostvars[groups['k3s_master'][0]]['ansible_host'] }}"
    k3s_cluster_init: true
  tasks:
    - name: Download K3s binary
      get_url:
        url: "https://github.com/k3s-io/k3s/releases/download/{{ k3s_version }}/k3s"
        dest: /usr/local/bin/k3s
        mode: '0755'

    - name: Create K3s service file for first master
      template:
        src: k3s.service.j2
        dest: /etc/systemd/system/k3s.service
        mode: '0644'

    - name: Reload systemd
      systemd:
        daemon_reload: yes

    - name: Start and enable K3s service
      systemd:
        name: k3s
        state: started
        enabled: yes

    - name: Wait for K3s to be ready
      wait_for:
        port: 6443
        timeout: 300

    - name: Get K3s node token
      command: cat /var/lib/rancher/k3s/server/node-token
      register: k3s_node_token
      changed_when: false

    - name: Set k3s token fact
      set_fact:
        k3s_token: "{{ k3s_node_token.stdout }}"

    - name: Get kubeconfig
      command: cat /etc/rancher/k3s/k3s.yaml
      register: kubeconfig
      changed_when: false

    - name: Replace localhost with master IP in kubeconfig
      set_fact:
        kubeconfig_content: "{{ kubeconfig.stdout | replace('127.0.0.1', k3s_master_ip) }}"

    - name: Save kubeconfig locally
      copy:
        content: "{{ kubeconfig_content }}"
        dest: "./k3s.yaml"
        mode: '0644'
      delegate_to: localhost
      become: false

- name: Configure additional K3s master nodes
  hosts: k3s_master[1:]
  become: true
  gather_facts: true
  vars:
    k3s_version: "v1.31.6+k3s1"
    k3s_master_ip: "{{ hostvars[groups['k3s_master'][0]]['ansible_host'] }}"
    k3s_cluster_init: false
    k3s_token: "{{ hostvars[groups['k3s_master'][0]]['k3s_token'] }}"
  tasks:
    - name: Download K3s binary
      get_url:
        url: "https://github.com/k3s-io/k3s/releases/download/{{ k3s_version }}/k3s"
        dest: /usr/local/bin/k3s
        mode: '0755'

    - name: Create K3s service file for additional masters
      template:
        src: k3s.service.j2
        dest: /etc/systemd/system/k3s.service
        mode: '0644'

    - name: Reload systemd
      systemd:
        daemon_reload: yes

    - name: Start and enable K3s service
      systemd:
        name: k3s
        state: started
        enabled: yes

    - name: Wait for K3s to be ready
      wait_for:
        port: 6443
        timeout: 300

  handlers:
    - name: restart k3s
      systemd:
        name: k3s
        state: restarted

- name: Configure K3s worker nodes
  hosts: k3s_workers
  become: true
  gather_facts: true
  vars:
    k3s_version: "v1.31.6+k3s1"
    k3s_master_nodes: "{{ groups['k3s_master'] | map('extract', hostvars, 'ansible_host') | list }}"
    k3s_token: "{{ hostvars[groups['k3s_master'][0]]['k3s_token'] }}"
  tasks:
    - name: Download K3s binary
      get_url:
        url: "https://github.com/k3s-io/k3s/releases/download/{{ k3s_version }}/k3s"
        dest: /usr/local/bin/k3s
        mode: '0755'

    - name: Create K3s agent service file
      template:
        src: k3s-agent.service.j2
        dest: /etc/systemd/system/k3s-agent.service
        mode: '0644'

    - name: Reload systemd
      systemd:
        daemon_reload: yes

    - name: Start and enable K3s agent service
      systemd:
        name: k3s-agent
        state: started
        enabled: yes

  handlers:
    - name: restart k3s-agent
      systemd:
        name: k3s-agent
        state: restarted
        daemon_reload: yes
      async: 300  # 5 minute timeout
      poll: 5     # Check every 5 seconds

- name: Update kubeconfig with all master nodes
  hosts: k3s_master[0]
  become: true
  gather_facts: true
  vars:
    k3s_master_ips: "{{ groups['k3s_master'] | map('extract', hostvars, 'ansible_host') | list }}"
  tasks:
    - name: Get kubeconfig from first master
      command: cat /etc/rancher/k3s/k3s.yaml
      register: kubeconfig_raw
      changed_when: false

    - name: Create HA kubeconfig with all master nodes
      set_fact:
        kubeconfig_ha: "{{ kubeconfig_raw.stdout | regex_replace('server: https://127.0.0.1:6443', 'server: https://' + k3s_master_ips | join(':6443,https://') + ':6443') }}"

    - name: Save HA kubeconfig locally
      copy:
        content: "{{ kubeconfig_ha }}"
        dest: "./k3s-ha.yaml"
        mode: '0644'
      delegate_to: localhost
      become: false

    - name: Display cluster info
      debug:
        msg: |
          K3s HA cluster setup complete!
          Master nodes: {{ k3s_master_ips | join(', ') }}
          Kubeconfig files:
          - k3s.yaml (single master endpoint)
          - k3s-ha.yaml (all master endpoints)