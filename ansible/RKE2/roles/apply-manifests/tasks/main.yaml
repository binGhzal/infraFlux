# Wait for all nodes to be ready
- name: Wait for all nodes to be ready
  ansible.builtin.command:
    cmd: "kubectl get nodes --no-headers"
  register: nodes_status
  until: nodes_status.stdout_lines | length >= (groups['servers'] | length + groups['agents'] | length)
  retries: 60
  delay: 10
  changed_when: false
  become_user: "{{ ansible_user }}"
  environment:
    KUBECONFIG: /home/{{ ansible_user }}/.kube/config
  when: inventory_hostname == groups['servers'][0]

- name: Wait for all nodes to be in Ready state
  ansible.builtin.command:
    cmd: "kubectl wait --for=condition=Ready nodes --all --timeout=600s"
  changed_when: false
  become_user: "{{ ansible_user }}"
  environment:
    KUBECONFIG: /home/{{ ansible_user }}/.kube/config
  when: inventory_hostname == groups['servers'][0]

# Validate cluster deployment
- name: Get cluster status
  ansible.builtin.command:
    cmd: "kubectl get nodes -o wide"
  register: cluster_nodes
  become_user: "{{ ansible_user }}"
  environment:
    KUBECONFIG: /home/{{ ansible_user }}/.kube/config
  when: inventory_hostname == groups['servers'][0]

- name: Display cluster status
  ansible.builtin.debug:
    var: cluster_nodes.stdout_lines
  when: inventory_hostname == groups['servers'][0]

- name: Get cluster info
  ansible.builtin.command:
    cmd: "kubectl cluster-info"
  register: cluster_info
  become_user: "{{ ansible_user }}"
  environment:
    KUBECONFIG: /home/{{ ansible_user }}/.kube/config
  when: inventory_hostname == groups['servers'][0]

- name: Display cluster info
  ansible.builtin.debug:
    var: cluster_info.stdout_lines
  when: inventory_hostname == groups['servers'][0]

- name: Test cluster API access via VIP
  ansible.builtin.uri:
    url: "https://{{ vip }}:6443/readyz"
    method: GET
    validate_certs: false
    client_cert: /var/lib/rancher/rke2/server/tls/client-admin.crt
    client_key: /var/lib/rancher/rke2/server/tls/client-admin.key
    ca_path: /var/lib/rancher/rke2/server/tls/server-ca.crt
  register: vip_test
  when: inventory_hostname == groups['servers'][0]
  ignore_errors: true

- name: Display VIP access test results
  ansible.builtin.debug:
    msg:
      - "VIP ({{ vip }}) Access Test: {{ 'SUCCESS' if vip_test.status == 200 else 'FAILED' }}"
      - "Status Code: {{ vip_test.status | default('N/A') }}"
  when: inventory_hostname == groups['servers'][0]

- name: Display cluster information
  ansible.builtin.debug:
    msg:
      - "=== RKE2 Cluster Deployment Complete ==="
      - "Cluster API Server VIP: https://{{ vip }}:6443"
      - "Nodes: {{ groups['servers'] | length }} servers, {{ groups['agents'] | length }} agents"
      - "Kubeconfig location: /home/{{ ansible_user }}/.kube/config"
      - ""
      - "Next steps:"
      - "1. SSH to server1: ssh {{ ansible_user }}@{{ hostvars[groups['servers'][0]]['ansible_host'] }}"
      - "2. Test cluster: kubectl get nodes"
      - "3. Deploy applications via GitOps (FluxCD recommended)"
      - ""
      - "Note: Load balancer (MetalLB) and other applications"
      - "should be deployed via GitOps for better management"
  when: inventory_hostname == groups['servers'][0]
